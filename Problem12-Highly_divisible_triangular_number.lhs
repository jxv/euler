The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

> import Control.Arrow
> import Data.List
> import Control.Parallel.Strategies
> 
> divisorCount :: Integer -> (Integer, Int)
> divisorCount = id &&& (\n ->
>                         (length . nub . concat)
>                           ([[m,k] | m <- [1..((n + 1) `div` 2)], let (k,p) = n `divMod` m, p == 0]))
>
> triangle :: Integer -> Integer
> triangle n = (n * (n + 1)) `div` 2
> 
> triangles :: [Integer]
> triangles = map triangle [1..]
> 
> parMap' strat f = withStrategy (parBuffer 4 strat) . map f
> 
> answer :: Integer 
> answer = (fst . head . filter ((> 500) . snd)) (parMap' rpar divisorCount triangles)
> 
> main :: IO ()
> main = print answer
